Задача 1:
Да се състави програма, чрез която се въвежда стринг - непрекъсната последователност от знаци. Всеки знак е латинска буква и/или цифра. Броят знаци е от интервала [5..205].
Програмата да изведе позицията на първите два повтарящи се знака или Не, ако липсват такива.

Пример: габрово
Изход: 5-7

Задача 2:
Под диагонално доминатна матрица (diagonally dominant matrix) ще разбираме такава квадратна матрица, в която всеки елемент от главния диагонал по абсолютна стойност (модул) е по-голям или равен на сумата от абсолютните стойности на елементите от реда без него.
Да се състави програма на C++, чрез която се въвежда естествено число N [3..23] и след това се въвеждат NxN елемента, всички те са цели числа. Програмата да промени въведената квадратна матрица в диагонално доминатна матрица.

Задача 3:
Да се състави програма, чрез която се въвеждат две естествени число N и K. Числото N да се представи като двоично число с K броя цифри. 
Да се използва рекурсивна функция.

Пример: N=15, K=5 

Изход: 01111

Задача 4: 
Да се напише функция char* rowWithSymbol(char matrix[][100], int rows, int columns, char symbol);, която по дадена матрица от символи връща указател към първия ѝ ред, който съдържа даден символ. Ако такъв ред не съществува, функцията да връща nullptr.

Задача 5: Да се напише функция, която по дадена шахматна конфигурация - дъска (матрица от символи 8x8) с фигури в някои от клетките - проверява дали някой от играчите заплашва царя на другия. Списък с възможните символи в матрицата:

K for king
Q for queen
R for rook
B for bishop
N for knight (since K is already used)
P for pawn
Приемете, че за белите фигури са използвани малки букви, а за черните - главни.

Функцията да връща чрез параметрите си две булеви стойности - дали белите заплашват черните и дали черните заплашват белите.

Задача 6: Да се имплементира с рекурсивна функция алгоритъмът за сортиране quicksort (https://en.wikipedia.org/wiki/Quicksort)
